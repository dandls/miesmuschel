% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ScalorAggregate.R
\name{ScalorAggregate}
\alias{ScalorAggregate}
\title{Scalor giving Weighted Sum of Multiple Scalors}
\description{
\code{\link{Scalor}} that applies multiple other \code{\link{Scalor}}s and calculates their weighted sum.
}
\section{Supported Operand Types}{


Supported \code{\link[paradox:Param]{Param}} classes are:
}

\section{Dictionary}{

This \code{\link{Scalor}} can be created with the short access form \code{\link[=scl]{scl()}}
(\code{\link[=scls]{scls()}} to get a list), or through the the \link[mlr3misc:Dictionary]{dictionary}
\code{\link{dict_scalors}} in the following way:\preformatted{# preferred:
scl("aggregate", <scalors>)
scls("aggregate", <scalors>)  # takes vector IDs, returns list of Scalors

# long form:
dict_scalors$get("aggregate", <scalors>)
}
}

\examples{
# TODO
}
\seealso{
Other scalors: 
\code{\link{ScalorProxy}},
\code{\link{Scalor}},
\code{\link{dict_scalors_domcount}},
\code{\link{dict_scalors_nondom}},
\code{\link{dict_scalors_one}}

Other scalor wrappers: 
\code{\link{ScalorProxy}}
}
\concept{scalor wrappers}
\concept{scalors}
\section{Super classes}{
\code{\link[miesmuschel:MiesOperator]{miesmuschel::MiesOperator}} -> \code{\link[miesmuschel:Scalor]{miesmuschel::Scalor}} -> \code{ScalorAggregate}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{scalors}}{(\code{list} of \code{\link{Scalor}})\cr
\code{\link{Scalor}}s being wrapped. These operators are run and their outputs weighted.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ScalorAggregate$new()}}
\item \href{#method-prime}{\code{ScalorAggregate$prime()}}
\item \href{#method-clone}{\code{ScalorAggregate$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="miesmuschel" data-topic="MiesOperator" data-id="operate">}\href{../../miesmuschel/html/MiesOperator.html#method-operate}{\code{miesmuschel::MiesOperator$operate()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="miesmuschel" data-topic="MiesOperator" data-id="print">}\href{../../miesmuschel/html/MiesOperator.html#method-print}{\code{miesmuschel::MiesOperator$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="miesmuschel" data-topic="MiesOperator" data-id="repr">}\href{../../miesmuschel/html/MiesOperator.html#method-repr}{\code{miesmuschel::MiesOperator$repr()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize the \code{ScalorAggregate} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScalorAggregate$new(scalors)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{scalors}}{(\code{list} of \code{\link{Scalor}})\cr
\code{\link{Scalor}}s to wrap. The operations are run and weighted by \code{weight_#} configuration parameters,
depending on the \code{scaling} configuration parameter.
The constructed object gets a \emph{clone} of this argument. The \verb{$scalors} field will reflect this value.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-prime"></a>}}
\if{latex}{\out{\hypertarget{method-prime}{}}}
\subsection{Method \code{prime()}}{
See \code{\link{MiesOperator}} method. Primes both this operator, as well as the wrapped operators
given to \code{scalors} during construction.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScalorAggregate$prime(param_set)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{param_set}}{(\code{\link[paradox:ParamSet]{ParamSet}})\cr
Passed to \code{\link{MiesOperator}}\verb{$prime()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\link{invisible} \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScalorAggregate$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
