
on:
  push:
    branches: [master, devel]
  pull_request:
    branches: [master, devel]
  schedule:
    - cron: '33 4 * * *'

name: check

env:
  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
  R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
  WARNINGS_ARE_ERRORS: 1
  _R_CHECK_CRAN_INCOMING_REMOTE_: false
  _R_CHECK_TESTS_NLINES_: 0
  _R_CHECK_CRAN_INCOMING_: false

jobs:
  check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        action: [check]
        r: [release]
        include:
          - os: ubuntu-latest
            action: check
            r: devel
          - os: ubuntu-16.04
            action: check
            r: 3.5
    
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1 
        id: install-r
        with:
          r-version: ${{ matrix.r }}
      - uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ matrix.os }}-${{ steps.install-r.outputs.installed-r-version }}
      - shell: Rscript {0}
        run: |
          if (!require("remotes", quietly = TRUE)) install.packages("remotes")
      - if: runner.os == 'Linux'
        run: |
          while read -r depinst ; do
            echo "> $depinst"
            eval sudo $depinst
          done < <( Rscript -e "writeLines(remotes::system_requirements('ubuntu', '$( . /etc/os-release ; echo $VERSION_ID )'))")
      - shell: Rscript {0}
        run: | 
          remotes::install_deps(dependencies = TRUE)
      - name: Session Info
        shell: Rscript {0}
        run: |
          options(width = 200)
          installed.packages()[, c("Package", "Version", "Built")]
          sessionInfo() 
      - run: |
          echo ${{ matrix.os }} ${{ steps.install-r.outputs.installed-r-version }} ${{ env.R_LIBS_USER }}
          echo $PWD
          ls -a ..
#      - run: R CMD build ${{   }}
