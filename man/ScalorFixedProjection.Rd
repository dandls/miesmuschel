% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ScalorFixedProjections.R
\name{ScalorFixedProjection}
\alias{ScalorFixedProjection}
\title{Multi-Objective Fixed Projection Scalor}
\description{
\code{\link{Scalor}} that returns the maximum of a set of projections.

Priming PS must contain a \code{"scalarization_weights"} tagged \code{\link[paradox:ParamUty]{ParamUty}} that contains
weight matrices (Nobjectives x Nweights) or vectors (if Nweights is 1).
}
\section{Configuration Parameters}{

\itemize{
\item \code{scalarization} :: \code{\link{function}}\cr
Function taking a fitness-matrix \code{fitnesses} (Nindivs x Nobjectives, with higher values indicating higher desirability)
and a list of weight matrices \code{weights} (Nindivs elements of Nobjectives x Nweights matrices; positive weights should indicate a positive contribution
to scale)
and returns a matrix of scalarizations (Nindivs x Nweights, with higher values indicating greater desirability)
}
}

\section{Supported Operand Types}{


Supported \code{\link[paradox:Param]{Param}} classes are: \code{\link[paradox:ParamLgl]{ParamLgl}}, \code{\link[paradox:ParamInt]{ParamInt}}, \code{\link[paradox:ParamDbl]{ParamDbl}}, \code{\link[paradox:ParamFct]{ParamFct}}
}

\section{Dictionary}{

This \code{\link{Scalor}} can be created with the short access form \code{\link[=scl]{scl()}}
(\code{\link[=scls]{scls()}} to get a list), or through the the \link[mlr3misc:Dictionary]{dictionary}
\code{\link{dict_scalors}} in the following way:\preformatted{# preferred:
scl("fixedprojection")
scls("fixedprojection")  # takes vector IDs, returns list of Scalors

# long form:
dict_scalors$get("fixedprojection")
}
}

\examples{
set.seed(1)
}
\seealso{
Other scalors: 
\code{\link{ScalorAggregate}},
\code{\link{ScalorProxy}},
\code{\link{Scalor}},
\code{\link{dict_scalors_domcount}},
\code{\link{dict_scalors_hypervolume}},
\code{\link{dict_scalors_nondom}},
\code{\link{dict_scalors_one}}

Other scalor wrappers: 
\code{\link{ScalorAggregate}},
\code{\link{ScalorProxy}}
}
\concept{scalor wrappers}
\concept{scalors}
\section{Super classes}{
\code{\link[miesmuschel:MiesOperator]{miesmuschel::MiesOperator}} -> \code{\link[miesmuschel:Scalor]{miesmuschel::Scalor}} -> \code{ScalorFixedProjection}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{weights_component_id}}{(\code{numeric(1)})\cr
search space component identifying the weights by which to scalarize.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ScalorFixedProjection$new()}}
\item \href{#method-prime}{\code{ScalorFixedProjection$prime()}}
\item \href{#method-clone}{\code{ScalorFixedProjection$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="miesmuschel" data-topic="MiesOperator" data-id="operate">}\href{../../miesmuschel/html/MiesOperator.html#method-operate}{\code{miesmuschel::MiesOperator$operate()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="miesmuschel" data-topic="MiesOperator" data-id="print">}\href{../../miesmuschel/html/MiesOperator.html#method-print}{\code{miesmuschel::MiesOperator$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="miesmuschel" data-topic="MiesOperator" data-id="repr">}\href{../../miesmuschel/html/MiesOperator.html#method-repr}{\code{miesmuschel::MiesOperator$repr()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize the \code{ScalorFixedProjection} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScalorFixedProjection$new(weights_component_id = "scalarization_weights")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{weights_component_id}}{(\code{character(1)})\cr
Id of the search space component identifying the weights by which to scalarize. Default \code{"scalarization_weights"}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-prime"></a>}}
\if{latex}{\out{\hypertarget{method-prime}{}}}
\subsection{Method \code{prime()}}{
See \code{\link{MiesOperator}} method. Primes both this operator, as well as the operator given to the \code{operation} configuration parameter.
Note that this modifies the \verb{$param_set$values$operation} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScalorFixedProjection$prime(param_set)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{param_set}}{(\code{\link[paradox:ParamSet]{ParamSet}})\cr
Passed to \code{\link{MiesOperator}}\verb{$prime()}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\link{invisible} \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScalorFixedProjection$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
