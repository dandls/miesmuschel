% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Selector.R
\name{dict_selectors_random}
\alias{dict_selectors_random}
\alias{SelectorRandom}
\title{Random Selector}
\description{
Random selector that disregards fitness and individual values and selects individuals randomly. Depending on the hyperparameter \code{replace},
it samples with or without replacement.
}
\section{Hyperparameters}{

\itemize{
\item \code{replace} :: \code{logical(1)}\cr
Whether to sample individuals with (\code{TRUE}) or without (\code{FALSE}) replacement. When sampling is done without replacement, then
\code{n_select} must be less or equal the number of rows in \code{values} when calling \verb{$operate()}. Initialized to \code{FALSE}.
}
}

\section{Supported Operand Types}{


Supported \code{\link[paradox:Param]{Param}} classes are: \code{\link[paradox:ParamLgl]{ParamLgl}}, \code{\link[paradox:ParamInt]{ParamInt}}, \code{\link[paradox:ParamDbl]{ParamDbl}}, \code{\link[paradox:ParamFct]{ParamFct}}
}

\section{Dictionary}{

This \code{\link{Selector}} can be created with the short access form \code{\link[=sel]{sel()}}
(\code{\link[=sels]{sels()}} to get a list), or through the the \link[mlr3misc:Dictionary]{dictionary}
\code{\link{dict_selectors}} in the following way:\preformatted{# preferred:
sel("random")
sels("random")  # takes vector IDs, returns list of [`Selector`]s

# long form:
dict_selectors$get("random")
}
}

\seealso{
Other selectors: 
\code{\link{Selector}},
\code{\link{dict_selectors_best}}
}
\concept{selectors}
\section{Super classes}{
\code{\link[Miesmuschel:MiesOperator]{Miesmuschel::MiesOperator}} -> \code{\link[Miesmuschel:Selector]{Miesmuschel::Selector}} -> \code{SelectorRandom}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{SelectorRandom$new()}}
\item \href{#method-clone}{\code{SelectorRandom$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="Miesmuschel" data-topic="MiesOperator" data-id="operate">}\href{../../Miesmuschel/html/MiesOperator.html#method-operate}{\code{Miesmuschel::MiesOperator$operate()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="Miesmuschel" data-topic="MiesOperator" data-id="prime">}\href{../../Miesmuschel/html/MiesOperator.html#method-prime}{\code{Miesmuschel::MiesOperator$prime()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize the \code{SelectorRandom} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SelectorRandom$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SelectorRandom$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
