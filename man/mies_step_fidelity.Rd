% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mies_methods.R
\name{mies_step_fidelity}
\alias{mies_step_fidelity}
\title{Re-Evaluate Configurations with Higher Fidelity}
\usage{
mies_step_fidelity(
  inst,
  fidelity_schedule,
  budget_id,
  generation_lookahead = TRUE,
  current_gen_only = FALSE,
  monotonic = TRUE
)
}
\arguments{
\item{inst}{(\code{\link[bbotk:OptimInstance]{OptimInstance}})\cr
Optimization instance to evaluate.}

\item{fidelity_schedule}{(\code{data.frame})\cr
\code{data.frame} with three columns \code{"generation"}, \code{"budget_new"}, \code{"budget_survivors"}, in that order. \code{"budget_new"} and \code{"budget_survivors"}
are atomic columns. The value of \code{"budget_survivors"} of the appropriate row is assigned to the \code{budget_id} component of \code{offspring}.
\code{"generation"} is an integer valued column, indicating the first generation at which a row is valid. At least one row with
\code{generation == 1} must be present.}

\item{budget_id}{(\code{character(1)})\cr
Budget component that is set to the value found in \code{fidelity_schedule}.}

\item{generation_lookahead}{(\code{logical(1)})\cr
Whether to re-evaluate alive individuals with the \code{"budget_survivors"} entry of the current generation (\code{FALSE}), or
of the next generation (\code{TRUE}).}

\item{current_gen_only}{(\code{logical(1)})\cr
Whether to only re-evaluate survivors individuals generated in the latest generation (\code{TRUE}), or re-evaluate all currently alive
individuals (\code{FALSE}). In any case, only individuals that were not already evaluated with the chosen fidelity are evaluated,
so this will usually only affect individuals from before the latest generation if the \code{"budget_survivors"} changed between
generations (i.e. when a different row from \code{fidelity_schedule} is used).}

\item{monotonic}{(\code{logical(1)})\cr
Whether to only re-evaluate configurations for which the fidelity would increase. Default \code{TRUE}.}
}
\value{
\link{invisible} \code{\link[data.table:data.table]{data.table}}: the performance values returned when evaluating the \code{offspring} values
through \code{eval_batch}.
}
\description{
As part of the "rolling-tide" multifidelity-setup, do reevaluation of configurations with
higher fidelity that have survived lower-fidelity selection.

The \code{fidelity_schedule} specifies what the fidelity (i.e. value of the "budget" component) of evaluations
done or compared at generation \code{i} should be. The \code{generation_lookahead} parameter has a subtle influence.
If it is \code{TRUE}, then, at the end of generation \code{i}, reevaluation is done with the \code{"budget_survivors"}
fidelity of generation \code{i + 1}, otherwise the entry of generation \code{i} is used. This gives the \code{"budget_survivors"}
column a slightly different meaning in the two cases: either it is the budget, with which survivors "entering"
generation \code{i} have been evaluated, or it is the budget with which survivors "coming out of" that generation
were evaluated. The evaluations are done as part of the \emph{current} generation in any case (see examples).

This function should only be called when doing rolling-tide multifidelity, and should not be part of the
MIES cycle otherwise.
}
\seealso{
Other mies building blocks: 
\code{\link{mies_evaluate_offspring}()},
\code{\link{mies_generate_offspring}()},
\code{\link{mies_get_fitnesses}()},
\code{\link{mies_init_population}()},
\code{\link{mies_select_from_archive}()},
\code{\link{mies_survival_comma}()},
\code{\link{mies_survival_plus}()}
}
\concept{mies building blocks}
