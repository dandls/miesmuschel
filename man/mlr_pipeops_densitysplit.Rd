% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PipeOpDensitySplit.R
\name{mlr_pipeops_densitysplit}
\alias{mlr_pipeops_densitysplit}
\alias{PipeOpDensitySplit}
\title{Split Regression Task into two Density Tasks}
\format{
\code{\link{R6Class}} inheriting from \code{\link{PipeOp}}.
}
\description{
Create two \code{\link{TaskDensity}} from a \code{\link[mlr3:TaskRegr]{TaskRegr}}: one comprising the upper \code{alpha} fraction, the other the 1 - \code{alpha} lower fraction
(but at least \code{min_size}).
}
\section{Construction}{
\preformatted{PipeOpDensitySplit$new(id = "densitysplit", param_vals = list())
}
\itemize{
\item \code{id} :: \code{character(1)}\cr
Identifier of the resulting object, default \code{"densityratio"}.
\item \code{param_vals} :: named \code{list}\cr
List of hyperparameter settings, overwriting the hyperparameter settings that would otherwise be set during construction. Default \code{list()}.
}
}

\section{Input and Output Channels}{

\code{\link{PipeOpDensitySplit}} has one input channels named \code{"input"}, taking a \code{\link[mlr3:TaskRegr]{TaskRegr}} during both training and prediction.

\code{\link{PipeOpDensitySplit}} has two output channels, \code{"top"} and \code{"bottom"}, both \code{\link{TaskDensity}} during both training and prediction.
}

\section{State}{

The \verb{$state} is left empty (\code{list()}).
}

\section{Parameters}{

The parameters are the parameters inherited from the \code{\link{PipeOp}}, as well as:
\itemize{
\item \code{alpha} :: \code{numeric(1)}\cr
What proportion of values to consider 'good'. BOHB has this at \code{0.15}.
\item \code{min_size} :: \code{integer(1)}\cr
Minimum size of both \code{\link{TaskDensity}} to create. Initialized to 1.
}
}

\section{Internals}{

Can be used with \code{\link{PipeOpDensityRatio}}.
}

\section{Fields}{

Only fields inherited from \code{\link{PipeOp}}.
}

\section{Methods}{

Only methods inherited from \code{\link{PipeOp}}.
}

\seealso{
Other PipeOps: 
\code{\link{mlr_pipeops_densityratio}},
\code{\link{mlr_pipeops_predictionunion}},
\code{\link{mlr_pipeops_stratify}}

Other BOHB implementing operations: 
\code{\link{mlr_pipeops_densityratio}}
}
\concept{BOHB implementing operations}
\concept{PipeOps}
\section{Super class}{
\code{\link[mlr3pipelines:PipeOp]{mlr3pipelines::PipeOp}} -> \code{PipeOpDensitySplit}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PipeOpDensitySplit$new()}}
\item \href{#method-clone}{\code{PipeOpDensitySplit$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="predict">}\href{../../mlr3pipelines/html/PipeOp.html#method-predict}{\code{mlr3pipelines::PipeOp$predict()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="print">}\href{../../mlr3pipelines/html/PipeOp.html#method-print}{\code{mlr3pipelines::PipeOp$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3pipelines" data-topic="PipeOp" data-id="train">}\href{../../mlr3pipelines/html/PipeOp.html#method-train}{\code{mlr3pipelines::PipeOp$train()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpDensitySplit$new(id = "densitysplit", param_vals = list())}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PipeOpDensitySplit$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
